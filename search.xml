<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一篇博客</title>
    <url>/2022/09/07/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h4 id="换成hexo写博客了，学的东西太多了需要找个记录知识的地方。用博客园记录觉得不够灵活，正好尝试复习一下Markdown语法。"><a href="#换成hexo写博客了，学的东西太多了需要找个记录知识的地方。用博客园记录觉得不够灵活，正好尝试复习一下Markdown语法。" class="headerlink" title="换成hexo写博客了，学的东西太多了需要找个记录知识的地方。用博客园记录觉得不够灵活，正好尝试复习一下Markdown语法。"></a>换成hexo写博客了，学的东西太多了需要找个记录知识的地方。用博客园记录觉得不够灵活，正好尝试复习一下Markdown语法。</h4>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>SPA的理解</title>
    <url>/2022/09/07/SPA%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="一、什么是SPA"><a href="#一、什么是SPA" class="headerlink" title="一、什么是SPA"></a>一、什么是SPA</h2><p>SPA（single-page application），翻译过来就是单页应用SPA是一种网络应用程序或网站的模型，它通过动态重写当前页面来与用户交互，这种方法避免了页面之间切换打断用户体验在单页应用中，所有必要的代码（HTML、JavaScript和CSS）都通过单个页面的加载而检索，或者根据需要（通常是为响应用户操作）动态装载适当的资源并添加到页面页面在任何时间点都不会重新加载，也不会将控制转移到其他页面。</p>
<p>我们熟知的JS框架如react,vue,angular,ember都属于SPA</p>
<h4 id="单页应用与多页应用的区别"><a href="#单页应用与多页应用的区别" class="headerlink" title="单页应用与多页应用的区别"></a>单页应用与多页应用的区别</h4><table>
<thead>
<tr>
<th></th>
<th>单页面应用SPA</th>
<th>多页面应用MPa</th>
</tr>
</thead>
<tbody><tr>
<td>组成</td>
<td>一个主页面和多个页面片段</td>
<td>多个主页面</td>
</tr>
<tr>
<td>刷新方式</td>
<td>局部刷新</td>
<td>整页刷新</td>
</tr>
<tr>
<td>url模式</td>
<td>哈希模式</td>
<td>历史模式</td>
</tr>
<tr>
<td>SEO搜索引擎优化</td>
<td>难实现，可使用SSR方式改善</td>
<td>容易实现</td>
</tr>
<tr>
<td>数据传递</td>
<td>容易</td>
<td>通过url，cookie，locaStorage实现</td>
</tr>
<tr>
<td>页面切换</td>
<td>速度快，用户体验好</td>
<td>切换加载资源，速度慢，用户体验差</td>
</tr>
<tr>
<td>维护成本</td>
<td>相对容易</td>
<td>相对复杂</td>
</tr>
</tbody></table>
<h5 id="单页应用优缺点"><a href="#单页应用优缺点" class="headerlink" title="单页应用优缺点"></a>单页应用优缺点</h5><p> 优点：</p>
<ul>
<li>具有桌面应用的即时性、网站的可移植性和可访问性</li>
<li>用户体验好、快，内容的改变不需要重新加载整个页面</li>
<li>靓号的前后端分离，分工更明确</li>
</ul>
<p>缺点：</p>
<ul>
<li>不利于搜素引擎抓取</li>
<li>首次渲染速度相对较慢</li>
</ul>
<h3 id="如何给SPA做SEO"><a href="#如何给SPA做SEO" class="headerlink" title="如何给SPA做SEO?"></a>如何给SPA做SEO?</h3><h4 id="基于Vue的SPA三种实现方式"><a href="#基于Vue的SPA三种实现方式" class="headerlink" title="基于Vue的SPA三种实现方式"></a>基于Vue的SPA三种实现方式</h4><h4 id="1-SSR服务端渲染"><a href="#1-SSR服务端渲染" class="headerlink" title="1.SSR服务端渲染"></a>1.SSR服务端渲染</h4><pre><code>将组件或页面通过服务器生产html，再返回给浏览器，如 nuxt.js
</code></pre>
<h4 id="2-静态化"><a href="#2-静态化" class="headerlink" title="2.静态化"></a>2.静态化</h4><p>   目前主流的静态化主要有两种：<br>   （1）一种是通过程序将动态页面抓取并保存为静态页面，这样的页面的实际存在于服务器的硬盘中。<br>   （2）另外一种是通过WEB服务器的 URL Rewrite的方式，它的原理是通过web服务器内部模块按一定规则将外部的URL请求转化为内部的文件地址，一句话来说就是把外部请求的静态地址转化为实际的动态页面地址，而静态页面实际是不存在的。这两种方法都达到了实现URL静态化的效果。</p>
<h4 id="使用Phantomjs-针对爬虫处理"><a href="#使用Phantomjs-针对爬虫处理" class="headerlink" title="使用Phantomjs 针对爬虫处理"></a>使用Phantomjs 针对爬虫处理</h4><p>  理是通过Nginx配置，判断访问来源是否为爬虫，如果是则搜索引擎的爬虫请求会转发到一个node server，再通过PhantomJS来解析完整的HTML，返回给爬虫。</p>
]]></content>
      <categories>
        <category>面试题</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
</search>
